configuration:
  maya-animation: # Compose maya default
    #tools: # This should be handled later when we tackle the framework.Probably, we should be able to set sepecific version of those tools as well.
      #- maya_framework_publisher
      #- maya_framework_opener
    launch:
      supported-versions: ">= 2018, < 2024"
      version: ${ft.regex:${.${runtime.platform}}, "\d{4}"}
      windows: ${ft.glob:C:\Program Files\Autodesk\Maya*\bin\maya.exe}
      # I think providing the integration here is better than as an optional dependency because you don't need to re-install the config in the integration venv
      venv:
        2025:
          any: # This is the variant
            # TODO: It should resolve the name on the background with {config_name}_{python_version}_{app_name}_{integration_version}
            name: maya_animation_maya_2025_any_3.11
            # TODO: also expecting the resolved venv_path
            path: C:\Users\lluis\venvs\maya_animation_maya_2025_any_3.11
            python_version: 3.11 # Could this contain a list?
            # This key should be removed if we separate the tools from the integration later on, and the integration will simply be a dependnency of the tool.
            #integration: maya-framework==3.1.1
            #tools: framework-opener==3.2.1
            packages:
              - ftrack-maya-framework==3.0.0
        2024:
          python_version: 3.11
          # This key should be removed if we separate the tools from the integration later on, and the integration will simply be a dependnency of the tool.
          integration: maya-framework==3.0.0
          #tools: framework-opener==3.2.1
        any: # Seems that * is not accepted in yaml
          python_version: 3.9
          integration: maya-framework==3.0.0
          #tools: framework-opener==3.1.0
      # I don't fully like to have the hooks in the same package as in that moment is not python version agnostic anymore
      # In order to execute the discovery-hook, pre-launch-hook and launch-hook we should already have a framework initialized in connect...
      #discovery-hook: # Execute all the functions in sequence in the engine, with a specialized store where we validate the keys and values
        #- configuration.maya.launch-hook.discover #This one has 2 functions one to filter in the event and one to discover in the system
      #pre-launch-hook:
        #- ftrack_app_launcher.setup_environment # Will do nothing by default
      #launch-hook:
        #- ftrack_app_launcher.launch # This will actually launch the exe
      #Think about if we prefer to handle this on toml file or in here, in the toml file it should be handled as an extra as it will be installed in the connect env and not in the final environment
      #integration: ftrack-maya-framework #Even if we put this in the toml, we have to add a reference here to know in what integration this launcher is interested in.
      #python_versions:
        #2025: 3.11,
        #2024: 3.10,
      environment:
        MY_ENV: "test",
        MY_ENV2: "test",


  maya-lluis: # Compose maya default

    #tools: # This should be handled later when we tackle the framework.Probably, we should be able to set sepecific version of those tools as well.
    #- maya_framework_publisher
    #- maya_framework_opener
    launch:
      supported-versions: ">= 2018, < 2024"
      version: ${ft.regex:${.${runtime.platform}}, "\d{4}"}
      windows: ${ft.glob:C:\Program Files\Autodesk\Maya*\bin\maya.exe}
      # I don't fully like to have the hooks in the same package as in that moment is not python version agnostic anymore
      # In order to execute the discovery-hook, pre-launch-hook and launch-hook we should already have a framework initialized in connect...
      discovery-hook: # Execute all the functions in sequence in the engine, with a specialized store where we validate the keys and values
        - ftrack_app_launcher.discover #This one has 2 functions one to filter in the event and one to discover in the system
      pre-launch-hook:
        - ftrack_app_launcher.setup_environment # Will do nothing by default
      launch-hook:
        - ftrack_app_launcher.launch # This will actually launch the exe
      #Think about if we prefer to handle this on toml file or in here, in the toml file it should be handled as an extra as it will be installed in the connect env and not in the final environment
      integration: ftrack-maya-framework #Even if we put this in the toml, we have to add a reference here to know in what integration this launcher is interested in.
      python_versions:
        2025: 3.11,
        2024: 3.10,
      environment:
        MY_ENV: "test",
        MY_ENV2: "test",