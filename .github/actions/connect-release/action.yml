name: 'Connect plugin build and release'
description: "Action that builds and releases a Connect plugin based on setuptools"
inputs:
  package:
    required: true
    description: The package to build the plugin for
  tag:
    required: true
    description: The tag to release
  deleteprevious:
    required: true
    description: Whether or not delete previous release and tag
  prerelease:
    required: true
    description: Whether or not this is a pre-release
  token:
    required: true
    description: The GitHub token to use
runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - uses: actions/setup-python@v4
      with:
        python-version: '3.7'
    - name: Fetch tags
      run: |
        git fetch -a -t --force
      shell: bash
    - uses: ClementTsang/delete-tag-and-release@v0.3.1
      if: ${{ inputs.deleteprevious == 'true' }}
      with:
        delete_release: true # default: false
        tag_name: ${{ inputs.TAG }} # tag name to delete
      env:
        GITHUB_TOKEN: ${{ inputs.token }}
    - name: Create pre-release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ inputs.token }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ inputs.tag }}
        release_name: ${{ inputs.tag }}
        body: |
          Auto-generated pre-release on PR
          
          User: **${{ github.actor }}**
          Ref: **${{ github.ref }}**
          Commit: **${{ github.sha }}**
          
          Please check release notes for more information.
        draft: true
        prerelease: ${{ inputs.prelease }}
    - name: Restore pants build from cache
      uses: actions/cache/restore@v3
      with:
        path: dist
        key: pants-dist-${{github.sha}}
        fail-on-cache-miss: true
        enableCrossOsArchive: true
    - name: Build Connect plugin
      run: |
        cd dist
        tar -xzvf ftrack-${{ inputs.package }}*.tar.gz
        cd $(ls -d ftrack-${{ inputs.package }}*/|head -n 1)
        python setup.py build_plugin
        mv dist/*.zip ../
      shell: bash
    - uses: xresloader/upload-to-github-release@main
      env:
        GITHUB_TOKEN: ${{ inputs.token }}
      with:
        file: "dist/ftrack-${{ inputs.package }}-*.zip"
        release_id: ${{ steps.create_release.outputs.id }}
        overwrite: true
        verbose: true
        draft: false


