name: Docs
on:
  push:
    branches:
      - main # Set a branch name to trigger deployment
      - gh-pages # TODO: Remove before release

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  build-index:
    # Build integration root docs
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./
          destination: ./_site
      - name: Save build results to cache
        uses: actions/cache/save@v3
        with:
          path: _site
          key: pants-dist-${{github.sha}}

#  probe-packages:
#    # Determine which monorepo packages need to have docs built
#    needs: build
#    runs-on: ubuntu-latest
#    outputs:
#      changed: ${{ env.CHANGED }}
#    steps:
#      - uses: actions/checkout@v3
#        with:
#          fetch-depth: 0
#      - name: Determine which packages needs to have doc built
#        run: |
#          git fetch --all
#          echo "CHANGED=$(git diff --name-only origin/main | cut -d'/' -f 2-2 | uniq | tr '\n' ',')" >> $GITHUB_ENV
#          echo "Changed packages: ${{ env.CHANGED }}"

  build-package-docs:
    # Build per-package docs and amend to site
    needs: build-index
    strategy:
      matrix:
        include:
          - package: framework-core
            folder: libs
    name: Build docs (${{ matrix.package }})
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        #if: ${{ contains(needs.probe.outputs.changed,matrix.package) }}
        with:
          python-version: '3.7'
      - name: Restore built site from cache
        uses: actions/cache/restore@v3
        with:
          path: _site
          key: pants-dist-${{github.sha}}
          fail-on-cache-miss: true
      - name: Install dependencies
        #if: ${{ contains(needs.probe.outputs.changed,matrix.package) }}
        run: |
          pip install sphinx sphinx_rtd_theme lowdown
      - name: Sphinx build
        #if: ${{ contains(needs.probe.outputs.changed,matrix.package) }}
        run: |
          cd ${{ matrix.folder }}/${{ matrix.package }}
          sphinx-build doc _site/${{ matrix.folder }}/${{ matrix.package }}
      - name: Save build results to cache
        #if: ${{ contains(needs.probe.outputs.changed,matrix.package) }}
        uses: actions/cache/save@v3
        with:
          path: _site
          key: pants-dist-${{github.sha}}
          overwrite: true

  deploy:
    # Deploy to GitHub Pages
    needs: build-package-docs
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Restore built site from cache
        uses: actions/cache/restore@v3
        with:
          path: _site
          key: pants-dist-${{github.sha}}
          fail-on-cache-miss: true
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
